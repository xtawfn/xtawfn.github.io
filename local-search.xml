<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>多线程</title>
    <link href="/2025/03/21/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <url>/2025/03/21/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/03/20/hello-world/"/>
    <url>/2025/03/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>怎么方便的写博客</title>
    <link href="/2024/08/22/%E6%80%8E%E4%B9%88%E6%96%B9%E4%BE%BF%E7%9A%84%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/08/22/%E6%80%8E%E4%B9%88%E6%96%B9%E4%BE%BF%E7%9A%84%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>如题，怎么才能舒舒服服的写博客。</p><p>由于之前用<code>termux</code>建站的骚操作，现在写起博客来难受的一比，<code>termux</code>没有<code>gui</code>，想要</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C++的类</title>
    <link href="/2024/08/22/C-%E7%9A%84%E7%B1%BB/"/>
    <url>/2024/08/22/C-%E7%9A%84%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><p>类是C</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客建立的记录</title>
    <link href="/2024/07/30/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <url>/2024/07/30/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="第一个博客"><a href="#第一个博客" class="headerlink" title="第一个博客"></a>第一个博客</h1><p><em>这是我的第一个博客，用来记录这个博客建立时走的弯路</em></p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><ol><li><p>服务器</p><ol><li><p>由于后台用的旧手机上安装的<code> Termux</code>，首先需要换源, **：</p><p>​<em><code>Termux </code>默认的官方源太慢了</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27;</span> <span class="hljs-variable">$PREFIX</span>/etc/apt/sources.list<br><br>sed -i <span class="hljs-string">&#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27;</span> <span class="hljs-variable">$PREFIX</span>/etc/apt/sources.list.d/game.list<br><br>sed -i <span class="hljs-string">&#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27;</span> <span class="hljs-variable">$PREFIX</span>/etc/apt/sources.list.d/science.list<br><br>pkg update<br></code></pre></td></tr></table></figure></li><li><p>安装<code>Nodejs</code>并换源：</p><pre><code class="hljs"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Termux安装Node.js</span><br>pkg install nodejs-lts<br><br><span class="hljs-comment"># 查询当前使用的镜像源</span><br>npm get registry<br><br><span class="hljs-comment"># 设置为淘宝镜像源</span><br>npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com/<br><br><span class="hljs-comment"># 还原为官方镜像源</span><br>npm config <span class="hljs-built_in">set</span> registry https://registry.npmjs.org/<br><br></code></pre></td></tr></table></figure></code></pre></li><li><p>安装Git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Termux 安装Git</span><br>pkg install git<br></code></pre></td></tr></table></figure></li><li><p>安装<code>Hexo </code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li></ol></li></ol><p>​<em>本来想使用<code> WordPress</code>框架的，但是手机没有ROOT，没有办法建立数据库，就用了配置简单的<code> Hexo</code>。</em></p><hr><h2 id="本地化部署"><a href="#本地化部署" class="headerlink" title="本地化部署"></a>本地化部署</h2><ol><li>创建放置博客的文件夹：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo inif myblog<br><span class="hljs-comment">#这里可以直接使用 hexo init 新建一个文件夹</span><br><span class="hljs-comment">#也可以先建立一个文件夹，然后使用hexo init来初始化这个文件夹</span><br><br><span class="hljs-comment">#进入myblog项目</span><br><span class="hljs-built_in">cd</span> myblog<br><br><span class="hljs-comment">#安装</span><br>npm install<br></code></pre></td></tr></table></figure><ol start="2"><li><p>启动这个项目:</p><ol><li><p>在项目根目录下，使用<code>hexo g</code>生成静态网页</p></li><li><p>使用<code>hexo s</code>来三个本地化部署，还可以使用<code>hexo s -p post</code>来指定端口，默认使用4000端口。</p></li><li><p>接下来，就可以在浏览器输入网址：<a href="http://localhost/4000">http://localhost/4000</a> 以访问。</p><hr></li></ol></li></ol><h2 id="Github-托管"><a href="#Github-托管" class="headerlink" title="Github  托管"></a><code>Github </code> 托管</h2><ol><li><p>首先需要建立一个<code>github</code>帐号，并新建一个名为<code>username.github.io</code>人仓库</p></li><li><p>建立酵<code>Git </code>和<code> Github</code>的连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#初始化用户名，username是你的GitHub用户名</span><br>git config --global user.name <span class="hljs-string">&quot;username&quot;</span>  <br><span class="hljs-comment">#初始化邮箱，email是注册 GitHub的邮箱</span><br><span class="hljs-comment">#如果设置了隐藏邮箱，则是Github提供的邮箱</span><br>git config --global user.email <span class="hljs-string">&quot;email&quot;</span>      <br> <br> <span class="hljs-comment"># 生成ssh密钥对</span><br> ssh-keygen -t rsa          <br><span class="hljs-comment">#添加密钥对到Github 的SSH key中</span><br><br><span class="hljs-comment">#测试Github的连接</span><br>ssh -T git@github.com<br><br></code></pre></td></tr></table></figure><p>_本来要在<code>Gitee</code>上托管，毕竟本地化，速度快，毕竟<code>Github</code>时不时的抽风，但是<code>Gitee</code>的 <code>Gitee Pages</code> 暂停服务。😑</p></li><li><p>修改<code>myblog </code>目录下的<code>Hexo</code>全局配置文件 <code>_config.yml</code>的<code>deploy </code>字段</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br> <span class="hljs-attr">repo:</span><br>   <span class="hljs-attr">github:</span> <span class="hljs-string">https://github.com/username/username.github.io.git</span>  <span class="hljs-comment"># username是Github用户名</span><br> <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span> <span class="hljs-comment">#如果用的是gitee，这里的 main 应该换成 master    </span><br></code></pre></td></tr></table></figure></li><li><p>安装 Hexo 推送 Git 插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>如果删除了<code> myblog</code> 项目，需要重新安装插件。</p></li><li><p>推送网站静态文件到 GitHub 仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean  <span class="hljs-comment"># 清除生成的静态文件和缓存</span><br>hexo g      <span class="hljs-comment"># 生成新的博客静态文件</span><br>hexo s      <span class="hljs-comment"># 启动本地预览</span><br>hexo d      <span class="hljs-comment"># 推送博客静态文件到远程仓库</span><br></code></pre></td></tr></table></figure><p>这里在使用<code>hexo d</code>上传后，需要输入帐号密码。然后就会被<code> Github</code>拒绝连接，因为<code>Github </code>不再接受帐号密码验证，只接受<code> token</code> 验证。</p><p>打开自己的<code>GitHub</code>主页，点击头像找到<code>Settings</code>并进入，在左边目录栏找到<code>Personal access tokens</code>，点击<code>Generate new token</code>，按照步骤申请即可，过程简单。<code>Scopes</code>（范围）那里建议全选。</p><p>然后将<code> deploy</code>字段下的<code>repo：</code>改成</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># username是Github用户名, token 是获得的token</span><br><span class="hljs-attr">github:</span> <span class="hljs-string">token@https://github.com/username/username.github.io.git</span> <br></code></pre></td></tr></table></figure><p>设置<code> Token</code> 之后，<code>hexo d</code>就不用输入密码了。</p><p><em>这里其实还遇到过另一个问题</em> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fatal: unable to access <span class="hljs-string">&#x27;https://github.com/xtawfn/xtawfn.github.io.git/&#x27;</span>: Failed to connect to 127.0.0.1 port 7890 after 1 ms: Could not connect to server<br></code></pre></td></tr></table></figure><p><em>这里是因为<code>github</code>一直抽风，我就在网上找了个设置访问代理的方法，结果没什么用，就算是<code>Github</code>恢复之后，也连不上。</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#通过终端命令设置Github的访问代理</span><br>git config --global http.proxy http://127.0.0.1:7890    <br><br><span class="hljs-comment">#取消设置的代理</span><br>git config --global --nuset http.proxy                 <br></code></pre></td></tr></table></figure><p>取消之后，<code> hexo d</code> 恢复正常。</p></li></ol><hr><h2 id="Hexo美化"><a href="#Hexo美化" class="headerlink" title=" Hexo美化"></a><code> Hexo</code>美化</h2><p>参考链接 <a href="https://zeyulong.com/posts/3edad46f/"> <code> Hexo</code>博客美化 - 龙泽雨的博客 (<code>zeyulong.com</code>)</a></p><p><a href="https://fluid-dev.github.io/hexo-fluid-docs/"><code>Hexo Fluid</code> 用户手册</a> </p><ol><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br><br><span class="hljs-comment">#或者git拉取源代码到themes目录下</span><br>git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git<br><br></code></pre></td></tr></table></figure></li><li><p>指定主题</p><p>​修改<code>_config.yml</code> :</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li><li><p>创建关于页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>修改<code> /source/about/index.md</code> ,添加<code> layout</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span> <span class="hljs-comment">#这里的layout必须存在</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure></li><li><p>配置</p><ol><li><p>覆盖配置</p><p><code>Hexo</code>版本大于5.0的</p><p>创建<code> _config.fluid.yam</code>文件，并将<code>config,yml</code> 的全部配置复制过去，以后修改主题配置，只需要修改<code> _config.fluid.yml</code>。</p><p>小于5.0</p><p>在<code> source</code>创建<code> _data</code>目录，复制<code> ~/blog</code>目录下的<code> _config.yml</code> 到<code>_data</code> 目录下，更名为<code> fluid_config.yml</code>。</p><p>或者把<code> _config.yml</code>的内容复制到<code> fluid_config.yml</code></p></li><li><p>页面大图</p><ol><li><p>指向本地图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">banner_img: /img/bg/example.jpg  <span class="hljs-comment">#本地图片路径，必须在source之下</span><br></code></pre></td></tr></table></figure></li></ol></li><li><p>评论</p><p> 由于手机没法安装数据库，评论功能无法安装使用。</p></li></ol></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
